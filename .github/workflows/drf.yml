name: DRF

on:
  push:
    branches: [ '*' ]
  pull_request:

env:
  PYTHON_VERSION: '3.13'
  WORKING_DIRECTORY: python/drf
  MYSQL_DATABASE: mysql_api_local
  DJANGO_ENV: development

jobs:
  flake8:
    name: flake8
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Run flake8
        run: |
          # flake8チェックを実行（設定ファイルの設定を使用）
          flake8 . --count --show-source --statistics

  test:
    name: Run migrations and tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create test environment file
        run: |
          mkdir -p env/local
          cat > env/local/.env << 'EOL'
          # テスト環境用の設定
          DEBUG=True
          SECRET_KEY=django-insecure-b525gig#ci$vp0rg#$w95hzi^a8u7s2fldl93=7xf7s=j#8bhf
          ALLOWED_HOSTS=localhost,127.0.0.1

          # データベース設定
          DB_NAME=mysql_api_local
          DB_USER=root
          DB_PASSWORD=
          DB_HOST=127.0.0.1
          DB_PORT=3306
          EOL

      - name: Run migrations
        run: python manage.py migrate
        env:
          DJANGO_ENV: ${{ env.DJANGO_ENV }}

      - name: Run tests
        run: python manage.py test
        env:
          DJANGO_ENV: ${{ env.DJANGO_ENV }}

  pip-audit:
    name: pip-audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pip-audit
        run: |
          pip install pip-audit
          pip-audit

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t drf-app:test .
